package com.whyse.lib.test;
import org.bridj.BridJ;
import org.bridj.ann.Library;
import org.bridj.ann.Runtime;
import org.bridj.cpp.CPPRuntime;
/**
 * Wrapper for library <b>test</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("test") 
@Runtime(CPPRuntime.class) 
public class TestLibrary {
	static {
		BridJ.register();
		System.err.println("TestLibrary匹配方法结束+++++++++");
	}
	/** <i>native declaration : src\main\resources\lib\headfile\test1.h</i> */
	public static final double PI = (double)3.14149;
	/**
	 * Function<br>
	 * Original signature : <code>int Add(int, int)</code><br>
	 * <i>native declaration : src\main\resources\lib\headfile\test1.h:6</i>
	 */
	public static native int Add(int a, int b);
	/**
	 * Original signature : <code>void helloworld()</code><br>
	 * <i>native declaration : src\main\resources\lib\headfile\test1.h:8</i>
	 */
	public static native void helloworld();
	/** Global variable */
	public int GlobalVariable() {
		try {
			return (int)BridJ.getNativeLibrary("test").getSymbolPointer("GlobalVariable").getInt();
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/** Global variable */
	public TestLibrary GlobalVariable(int GlobalVariable) {
		try {
			{
				BridJ.getNativeLibrary("test").getSymbolPointer("GlobalVariable").setInt(GlobalVariable);
				return this;
			}
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
}
