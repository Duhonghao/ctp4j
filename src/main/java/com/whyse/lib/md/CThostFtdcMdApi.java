package com.whyse.lib.md;
import org.bridj.BridJ;
import org.bridj.Pointer;
import org.bridj.ann.Library;
import org.bridj.ann.Name;
import org.bridj.ann.Ptr;
import org.bridj.ann.Virtual;
import org.bridj.cpp.CPPObject;
/**
 * <i>native declaration : src\main\resources\lib\headfile\ThostFtdcMdApi.h:72</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("Md") 
public class CThostFtdcMdApi extends CPPObject {
	static {
		BridJ.register();
		System.err.println("CThostFtdcMdApi匹配方法结束+++++++++");
	}
	/**
	 * Original signature : <code>CThostFtdcMdApi* CreateFtdcMdApi(const char*, const bool, const bool)</code><br>
	 * <i>native declaration : src\main\resources\lib\headfile\ThostFtdcMdApi.h:40</i>
	 */
	public static Pointer<CThostFtdcMdApi > CreateFtdcMdApi(Pointer<Byte > pszFlowPath, boolean bIsUsingUdp, boolean bIsMulticast) {
		return (Pointer)Pointer.pointerToAddress(CreateFtdcMdApi(Pointer.getPeer(pszFlowPath), bIsUsingUdp, bIsMulticast), CThostFtdcMdApi.class);
	}
	@Ptr 
	protected native static long CreateFtdcMdApi(@Ptr long pszFlowPath, boolean bIsUsingUdp, boolean bIsMulticast);
	/**
	 * Original signature : <code>void Release()</code><br>
	 * <i>native declaration : src\main\resources\lib\headfile\ThostFtdcMdApi.h:42</i>
	 */
	@Virtual(0) 
	public native void Release();
	/**
	 * Original signature : <code>void Init()</code><br>
	 * <i>native declaration : src\main\resources\lib\headfile\ThostFtdcMdApi.h:44</i>
	 */
	@Virtual(1) 
	public native void Init();
	/**
	 * Original signature : <code>int Join()</code><br>
	 * <i>native declaration : src\main\resources\lib\headfile\ThostFtdcMdApi.h:46</i>
	 */
	@Virtual(2) 
	public native int Join();
	/**
	 * Original signature : <code>char* GetTradingDay()</code><br>
	 * <i>native declaration : src\main\resources\lib\headfile\ThostFtdcMdApi.h:48</i>
	 */
	@Virtual(3) 
	public Pointer<Byte > GetTradingDay() {
		return (Pointer)Pointer.pointerToAddress(GetTradingDay$2(), Byte.class);
	}
	@Ptr 
	@Name("GetTradingDay") 
	@Virtual(3) 
	protected native long GetTradingDay$2();
	/**
	 * Original signature : <code>void RegisterFront(char*)</code><br>
	 * <i>native declaration : src\main\resources\lib\headfile\ThostFtdcMdApi.h:50</i>
	 */
	@Virtual(4) 
	public void RegisterFront(Pointer<Byte > pszFrontAddress) {
		RegisterFront(Pointer.getPeer(pszFrontAddress));
	}
	@Virtual(4) 
	protected native void RegisterFront(@Ptr long pszFrontAddress);
	/**
	 * Original signature : <code>void RegisterNameServer(char*)</code><br>
	 * <i>native declaration : src\main\resources\lib\headfile\ThostFtdcMdApi.h:52</i>
	 */
	@Virtual(5) 
	public void RegisterNameServer(Pointer<Byte > pszNsAddress) {
		RegisterNameServer(Pointer.getPeer(pszNsAddress));
	}
	@Virtual(5) 
	protected native void RegisterNameServer(@Ptr long pszNsAddress);
	/**
	 * Original signature : <code>void RegisterFensUserInfo(CThostFtdcFensUserInfoField*)</code><br>
	 * <i>native declaration : src\main\resources\lib\headfile\ThostFtdcMdApi.h:54</i>
	 */
	@Virtual(6) 
	public void RegisterFensUserInfo(Pointer<CThostFtdcFensUserInfoField > pFensUserInfo) {
		RegisterFensUserInfo(Pointer.getPeer(pFensUserInfo));
	}
	@Virtual(6) 
	protected native void RegisterFensUserInfo(@Ptr long pFensUserInfo);
	/**
	 * Original signature : <code>void RegisterSpi(CThostFtdcMdSpi*)</code><br>
	 * <i>native declaration : src\main\resources\lib\headfile\ThostFtdcMdApi.h:56</i>
	 */
	@Virtual(7) 
	public void RegisterSpi(Pointer<CThostFtdcMdSpi > pSpi) {
		RegisterSpi(Pointer.getPeer(pSpi));
	}
	@Virtual(7) 
	protected native void RegisterSpi(@Ptr long pSpi);
	/**
	 * Original signature : <code>int SubscribeMarketData(char*[], int)</code><br>
	 * <i>native declaration : src\main\resources\lib\headfile\ThostFtdcMdApi.h:58</i>
	 */
	@Virtual(8) 
	public int SubscribeMarketData(Pointer<Pointer<Byte > > ppInstrumentID, int nCount) {
		return SubscribeMarketData(Pointer.getPeer(ppInstrumentID), nCount);
	}
	@Virtual(8) 
	protected native int SubscribeMarketData(@Ptr long ppInstrumentID, int nCount);
	/**
	 * Original signature : <code>int UnSubscribeMarketData(char*[], int)</code><br>
	 * <i>native declaration : src\main\resources\lib\headfile\ThostFtdcMdApi.h:60</i>
	 */
	@Virtual(9) 
	public int UnSubscribeMarketData(Pointer<Pointer<Byte > > ppInstrumentID, int nCount) {
		return UnSubscribeMarketData(Pointer.getPeer(ppInstrumentID), nCount);
	}
	@Virtual(9) 
	protected native int UnSubscribeMarketData(@Ptr long ppInstrumentID, int nCount);
	/**
	 * Original signature : <code>int SubscribeForQuoteRsp(char*[], int)</code><br>
	 * <i>native declaration : src\main\resources\lib\headfile\ThostFtdcMdApi.h:62</i>
	 */
	@Virtual(10) 
	public int SubscribeForQuoteRsp(Pointer<Pointer<Byte > > ppInstrumentID, int nCount) {
		return SubscribeForQuoteRsp(Pointer.getPeer(ppInstrumentID), nCount);
	}
	@Virtual(10) 
	protected native int SubscribeForQuoteRsp(@Ptr long ppInstrumentID, int nCount);
	/**
	 * Original signature : <code>int UnSubscribeForQuoteRsp(char*[], int)</code><br>
	 * <i>native declaration : src\main\resources\lib\headfile\ThostFtdcMdApi.h:64</i>
	 */
	@Virtual(11) 
	public int UnSubscribeForQuoteRsp(Pointer<Pointer<Byte > > ppInstrumentID, int nCount) {
		return UnSubscribeForQuoteRsp(Pointer.getPeer(ppInstrumentID), nCount);
	}
	@Virtual(11) 
	protected native int UnSubscribeForQuoteRsp(@Ptr long ppInstrumentID, int nCount);
	/**
	 * Original signature : <code>int ReqUserLogin(CThostFtdcReqUserLoginField*, int)</code><br>
	 * <i>native declaration : src\main\resources\lib\headfile\ThostFtdcMdApi.h:66</i>
	 */
	@Virtual(12) 
	public int ReqUserLogin(Pointer<CThostFtdcReqUserLoginField > pReqUserLoginField, int nRequestID) {
		return ReqUserLogin(Pointer.getPeer(pReqUserLoginField), nRequestID);
	}
	@Virtual(12) 
	protected native int ReqUserLogin(@Ptr long pReqUserLoginField, int nRequestID);
	/**
	 * Original signature : <code>int ReqUserLogout(CThostFtdcUserLogoutField*, int)</code><br>
	 * <i>native declaration : src\main\resources\lib\headfile\ThostFtdcMdApi.h:68</i>
	 */
	@Virtual(13) 
	public int ReqUserLogout(Pointer<CThostFtdcUserLogoutField > pUserLogout, int nRequestID) {
		return ReqUserLogout(Pointer.getPeer(pUserLogout), nRequestID);
	}
	@Virtual(13) 
	protected native int ReqUserLogout(@Ptr long pUserLogout, int nRequestID);
	public CThostFtdcMdApi() {
		super();
	}
	public CThostFtdcMdApi(Pointer pointer) {
		super(pointer);
	}
}
